package com.balakumaranstores.stat.dao;

import java.io.Serializable;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaUpdate;
import javax.persistence.criteria.Root;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.balakumaranstores.stat.Model.User;

@Component
public class UserDaoImpl implements UserDao {

	@Autowired
	private SessionFactory sessionFactory;

	@Override
	public int saveUser(User user) {
		Session session = sessionFactory.getCurrentSession();
		session.beginTransaction();
		int userId = 0;
		try {
			Serializable ser = session.save(user);
			if (ser != null) {
				userId = (Integer) ser;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		session.getTransaction().commit();
		return userId;
	}

	@Override
	public User getUserById(int id) {
		Session session = sessionFactory.getCurrentSession();
		session.beginTransaction();
		User user = session.get(User.class, id);
		return user;
	}

	@Override
	public void updateUser(User user) {
		Session session = sessionFactory.getCurrentSession();
//		session.beginTransaction();
//		session.saveOrUpdate(user);
//		session.getTransaction().commit();
		CriteriaBuilder builder = session.getCriteriaBuilder();
		CriteriaUpdate<User> criteria = builder.createCriteriaUpdate(User.class);
		Root<User> root = criteria.from(User.class);
		criteria.set(root.get("name"), user.getName());
		criteria.set(root.get("phoneno"), user.getPhoneno());
		criteria.set(root.get("products"), user.getProducts());
		criteria.where(builder.equal(root.get("id"), user.getId()));
		session.createQuery(criteria).executeUpdate();
		session.getTransaction().commit();
	}

}
